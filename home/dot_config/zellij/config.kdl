// If you'd like to override the default keybindings completely, be sure to change "keybinds" to "keybinds clear-defaults=true"
keybinds {
    normal {
        // uncomment this and adjust key if using copy_on_select=false
        // bind "Alt c" { Copy; }

        bind "Enter" {
            // Passthru `Enter`.
            WriteChars "\u{000D}";
            // Invoke autolock to immediately assess proper lock state.
            // (This provides a snappier experience compared to
            // solely relying on `reaction_seconds` to elapse.)
            MessagePlugin "autolock" {};
        }
    }

    locked {
        bind "Alt z" {
            // Disable the autolock plugin.
            MessagePlugin "autolock" { payload "disable"; };
            SwitchToMode "Normal";
        }
    }

    resize {
        bind "Ctrl n" { SwitchToMode "Normal"; }

        // Increase
        bind "j" "Left" { Resize "Increase Left"; }
        bind "k" "Down" { Resize "Increase Down"; }
        bind "i" "Up" { Resize "Increase Up"; }
        bind "l" "Right" { Resize "Increase Right"; }
        bind "=" "+" { Resize "Increase"; }

        // Decrease
        bind "J" { Resize "Decrease Left"; }
        bind "K" { Resize "Decrease Down"; }
        bind "I" { Resize "Decrease Up"; }
        bind "L" { Resize "Decrease Right"; }
        bind "-" { Resize "Decrease"; }
    }

    pane {
        bind "Ctrl p" { SwitchToMode "Normal"; }

        // Nav
        bind "j" "Left" { MoveFocus "Left"; }
        bind "k" "Down" { MoveFocus "Down"; }
        bind "i" "Up" { MoveFocus "Up"; }
        bind "l" "Right" { MoveFocus "Right"; }
        bind "p" { SwitchFocus; }

        // New
        bind "d" { NewPane "Down"; SwitchToMode "Normal"; }
        bind "r" { NewPane "Right"; SwitchToMode "Normal"; }
        // bind "s" { NewPane "stacked"; SwitchToMode "Normal"; } // ERROR?

        // Others
        bind "x" { CloseFocus; SwitchToMode "Normal"; }
        bind "f" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "w" { ToggleFloatingPanes; SwitchToMode "Normal"; }
        bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "Normal"; }
        bind "c" { SwitchToMode "RenamePane"; PaneNameInput 0;}
        bind "i" { TogglePanePinned; SwitchToMode "Normal"; }
    }

    move {
        bind "Ctrl h" { SwitchToMode "Normal"; }

        bind "n" "Tab" { MovePane; }
        bind "p" { MovePaneBackwards; }

        // Nav
        bind "j" "Left" { MovePane "Left"; }
        bind "k" "Down" { MovePane "Down"; }
        bind "i" "Up" { MovePane "Up"; }
        bind "l" "Right" { MovePane "Right"; }
    }

    tab {
        bind "Ctrl t" { SwitchToMode "Normal"; }

        // Nav
        bind "j" "Left" "Up" "i" { GoToPreviousTab; }
        bind "l" "Right" "Down" "k" { GoToNextTab; }
        bind "1" { GoToTab 1; SwitchToMode "Normal"; }
        bind "2" { GoToTab 2; SwitchToMode "Normal"; }
        bind "3" { GoToTab 3; SwitchToMode "Normal"; }
        bind "4" { GoToTab 4; SwitchToMode "Normal"; }
        bind "5" { GoToTab 5; SwitchToMode "Normal"; }
        bind "6" { GoToTab 6; SwitchToMode "Normal"; }
        bind "7" { GoToTab 7; SwitchToMode "Normal"; }
        bind "8" { GoToTab 8; SwitchToMode "Normal"; }
        bind "9" { GoToTab 9; SwitchToMode "Normal"; }
        bind "Tab" { ToggleTab; }

        // Others
        bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
        bind "n" { NewTab; SwitchToMode "Normal"; }
        bind "x" { CloseTab; SwitchToMode "Normal"; }
        bind "s" { ToggleActiveSyncTab; SwitchToMode "Normal"; }
        bind "b" { BreakPane; SwitchToMode "Normal"; }
        bind "]" { BreakPaneRight; SwitchToMode "Normal"; }
        bind "[" { BreakPaneLeft; SwitchToMode "Normal"; }
    }

    scroll {
        bind "Ctrl s" { SwitchToMode "Normal"; }
        bind "Ctrl c" "q" { ScrollToBottom; SwitchToMode "Normal"; }

        // Nav
        bind "k" "s" "Down" { ScrollDown; }
        bind "i" "w" "Up" { ScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "e" { HalfPageScrollUp; }
        bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
        bind "Ctrl b" "PageUp" "Left" "j" { PageScrollUp; }

        // Others
        bind "f" { SwitchToMode "EnterSearch"; SearchInput 0; }
        bind "r" { EditScrollback; SwitchToMode "Normal"; }
        // uncomment this and adjust key if using copy_on_select=false
        // bind "Alt c" { Copy; }
    }

    search {
        bind "Ctrl s" { SwitchToMode "Normal"; }
        bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }

        // Nav
        bind "k" "s" "Down" { ScrollDown; }
        bind "i" "w" "Up" { ScrollUp; }
        bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
        bind "Ctrl b" "PageUp" "Left" "j" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "e" { HalfPageScrollUp; }

        // Search Nav
        bind "n" { Search "down"; }
        bind "p" { Search "up"; }

        // Search Filters
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "a" { SearchToggleOption "Wrap"; }
        bind "o" { SearchToggleOption "WholeWord"; }
    }

    entersearch {
        bind "Ctrl c" "Esc" { SwitchToMode "Scroll"; }
        bind "Enter" { SwitchToMode "Search"; }
    }

    renametab {
        bind "Ctrl c" { SwitchToMode "Normal"; }
        bind "Esc" { UndoRenameTab; SwitchToMode "Tab"; }
    }

    renamepane {
        bind "Ctrl c" { SwitchToMode "Normal"; }
        bind "Esc" { UndoRenamePane; SwitchToMode "Pane"; }
    }

    session {
        bind "Ctrl o" { SwitchToMode "Normal"; }
        bind "Ctrl s" { SwitchToMode "Scroll"; }
        bind "d" { Detach; }
        bind "w" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "c" {
            LaunchOrFocusPlugin "configuration" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "a" {
            LaunchOrFocusPlugin "zellij:about" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "s" {
            LaunchOrFocusPlugin "zellij:share" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
    }

    tmux {
        bind "Ctrl b" { Write 2; SwitchToMode "Normal"; }
        bind "\"" { NewPane "Down"; SwitchToMode "Normal"; }
        bind "%" { NewPane "Right"; SwitchToMode "Normal"; }
        bind "z" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "c" { NewTab; SwitchToMode "Normal"; }
        bind "," { SwitchToMode "RenameTab"; }
        bind "p" { GoToPreviousTab; SwitchToMode "Normal"; }
        bind "n" { GoToNextTab; SwitchToMode "Normal"; }
        bind "o" { FocusNextPane; }
        bind "Space" { NextSwapLayout; }
        bind "x" { CloseFocus; SwitchToMode "Normal"; }
    }

    shared {
        bind "Alt Shift z" {
            // Enable the autolock plugin.
            MessagePlugin "autolock" { payload "enable"; };
        }
    }

    shared_except "locked" {
        bind "Alt z" {
            // Disable the autolock plugin.
            MessagePlugin "autolock" { payload "disable"; };
            SwitchToMode "Locked";
        }

        bind "Ctrl q" { Quit; }
        bind "Alt f" { ToggleFloatingPanes; }
        bind "Alt n" { NewPane "Down"; }
        bind "Alt u" { MoveTab "Left"; }
        bind "Alt o" { MoveTab "Right"; }

        // Nav
        bind "Alt j" { GoToPreviousTab; }
        bind "Alt l" { GoToNextTab; }
        bind "Alt J" "Alt Left" { MoveFocusOrTab "Left"; }
        bind "Alt L" "Alt Right" { MoveFocusOrTab "Right"; }
        bind "Alt K" "Alt Down" { MoveFocus "Down"; }
        bind "Alt I" "Alt Up" { MoveFocus "Up"; }

        bind "Alt =" "Alt +" { Resize "Increase"; }
        bind "Alt -" { Resize "Decrease"; }
        bind "Alt [" { PreviousSwapLayout; }
        bind "Alt ]" { NextSwapLayout; }
        // bind "Alt p" { TogglePaneInGroup; } // ERROR?
        // bind "Alt Shift p" { ToggleGroupMarking; } // ERROR?
    }
    shared_except "normal" "locked" {
        bind "Enter" "Esc" { SwitchToMode "Normal"; }
    }
    shared_except "pane" "locked" {
        bind "Ctrl p" { SwitchToMode "Pane"; }
    }
    shared_except "resize" "locked" {
        bind "Ctrl n" { SwitchToMode "Resize"; }
    }
    shared_except "scroll" "locked" {
        bind "Ctrl s" { SwitchToMode "Scroll"; }
    }
    shared_except "session" "locked" {
        bind "Ctrl o" { SwitchToMode "Session"; }
    }
    shared_except "tab" "locked" {
        bind "Ctrl t" { SwitchToMode "Tab"; }
    }
    shared_except "move" "locked" {
        bind "Ctrl h" { SwitchToMode "Move"; }
    }
    shared_except "tmux" "locked" {
        bind "Ctrl b" { SwitchToMode "Tmux"; }
    }
}

plugins {
    tab-bar location="zellij:tab-bar"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    compact-bar location="zellij:compact-bar"
    session-manager location="zellij:session-manager"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    filepicker location="zellij:strider" {
        cwd "/"
    }
    configuration location="zellij:configuration"
    plugin-manager location="zellij:plugin-manager"
    about location="zellij:about"
    autolock location="file:~/.config/zellij/plugins/zellij-autolock.wasm" {
        // Enabled at start?
        is_enabled true
        // Lock when any open these programs open.
        triggers "nvim|helix|vim|git|fzf|zoxide|atuin"
        // Reaction to input occurs after this many seconds. (default=0.3)
        // (An existing scheduled reaction prevents additional reactions.)
        reaction_seconds "1.0"
        // Print to Zellij log? (default=false)
        print_to_log true
    }
}

load_plugins {
    autolock
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
// on_force_close "quit"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
// simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
pane_frames false

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// session_serialization false

// Whether pane viewports are serialized along with the session, default is false
// (Requires restart)
// Options:
//   - true
//   - false (default)
//
// serialize_pane_viewport true

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000

// Define color themes for Zellij
// For more examples, see: https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the "theme" section of this file
//
// themes {
//     dracula {
//         fg 248 248 242
//         bg 40 42 54
//         red 255 85 85
//         green 80 250 123
//         yellow 241 250 140
//         blue 98 114 164
//         magenta 255 121 198
//         orange 255 184 108
//         cyan 139 233 253
//         black 0 0 0
//         white 255 255 255
//     }
// }

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "nord"

// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
//
default_layout "compact"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
// default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "/path/to/my/theme_dir"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
// disable_session_metadata true

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false

// Whether to make sure a local web server is running when a new Zellij session starts.
// This web server will allow creating new sessions and attaching to existing ones that have
// opted in to being shared in the browser.
// When enabled, navigate to http://127.0.0.1:8082
// (Requires restart)
// 
// Note: a local web server can still be manually started from within a Zellij session or from the CLI.
// If this is not desired, one can use a version of Zellij compiled without
// `web_server_capability`
// 
// Possible values:
// - true
// - false
// Default: false
//
// web_server true

// Whether to allow sessions started in the terminal to be shared through a local web server, assuming one is
// running (see the `web_server` option for more details).
// (Requires restart)
// 
// Note: This is an administrative separation and not intended as a security measure.
// 
// Possible values:
// - "on" (allow web sharing through the local web server if it
// is online)
// - "off" (do not allow web sharing unless sessions explicitly opt-in to it)
// - "disabled" (do not allow web sharing and do not permit sessions started in the terminal to opt-in to it)
// Default: "off"
// 
// web_sharing "on"

// The ip address the web server should listen on when it starts
// Default: "127.0.0.1"
// (Requires restart)
//
// web_server_ip "127.0.0.1"


// A path to a certificate file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_cert "/path/to/my/cert.pem"

// A path to a key file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_key "/path/to/my/key.pem"

// Whether to enforce https connections to the web server when it is bound to localhost
// (127.0.0.0/8)
//
// Note: https is ALWAYS enforced when bound to non-local interfaces
//
// Default: false
//
// enforce_https_for_localhost true

// The port the web server should listen on when it starts
// Default: 8082
// (Requires restart)
//
// web_server_port 8082

// Whether to stack panes when resizing beyond a certain size
// Default: true
//
// stacked_resize false

// Whether to show release notes on first version run
// Default: true
//
// show_release_notes false

// Whether to enable mouse hover effects and pane grouping functionality
// Default: true
//
// advanced_mouse_actions false

// A command to run (will be wrapped with sh -c and provided the RESURRECT_COMMAND env variable)
// after Zellij attempts to discover a command inside a pane when resurrecting sessions, the STDOUT
// of this command will be used instead of the discovered RESURRECT_COMMAND
// can be useful for removing wrappers around commands
// Note: be sure to escape backslashes and similar characters properly
//
// post_command_discovery_hook "echo $RESURRECT_COMMAND | sed <your_regex_here>"


web_client {
    font "monospace"
}
