(defcfg
  process-unmapped-keys yes
  sequence-input-mode visible-backspaced
  concurrent-tap-hold yes
)

(defsrc
  q  w  e  r      u  i  o  p
   a  s  d  f      j  k  l  ;
)

(defvar
  tt  100 ;; tap time
  ht  150 ;; hold time
  ct  70  ;; chord time
  ot  500 ;; one shot time
  ltk (q w e r t  a s d f g) ;; left hand
  rtk (y u i o p  h j k l ;) ;; right hand
)

(defalias
  ;; UNICODE SYMBOLS
  colon   (unicode :)
  semic   (unicode ;)
  dot     (unicode .)
  comma   (unicode ,)
  qmark   (unicode ?)
  ;;
  emark   (unicode !)
  at      (unicode @)
  hash    (unicode #)
  dollr   (unicode $)
  percn   (unicode %)
  caret   (unicode ^)
  amper   (unicode &)
  aster   (unicode *)
  ;;
  plus    (unicode +)
  equal   (unicode =)
  dash    (unicode -)
  under   (unicode _)
  ;;
  lparn   (macro S-9)
  rparn   (macro S-0)
  lbrac   (unicode {)
  rbrac   (unicode })
  lbrak   (unicode [)
  rbrak   (unicode ])
  gt      (unicode >)
  lt      (unicode <)
  ;;
  grave   (unicode `)
  tilde   (unicode ~)
  fslsh   (unicode /)
  pipe    (unicode |)
  bslsh   (unicode \)
  quot    (unicode ')
  dquot   (macro S-')
)

(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  ;; ONE SHOT LAYER
  os_meh   (one-shot-press $ot C-S-lalt)
  os_ns    (one-shot-press $ot (layer-while-held U_NS))
  os_ff    (one-shot-press $ot (layer-while-held U_FF))
  os_go    (one-shot-press $ot (layer-while-held U_GO))
  os_me    (one-shot-press $ot (layer-while-held U_ME))

  ;; GO TO LAYER
  u_al     (layer-switch base)
  u_nl     (layer-switch U_NL)
  u_nr     (layer-switch U_NR)
 
  ;; QWERTY - LEFT
  _w       (tap-hold-release-keys $tt $ht (multi w @tap) lmet $ltk)
  _e       (tap-hold-release-keys $tt $ht (multi e @tap) (layer-while-held U_NS) $ltk)
  _r       (tap-hold-release-keys $tt $ht (multi r @tap) lalt $ltk)
  _a       (tap-hold-release-keys $tt $ht (multi a @tap) (layer-while-held U_NR) $ltk)
  _s       (tap-hold-release-keys $tt $ht (multi s @tap) lctl $ltk)
  _f       (tap-hold-release-keys $tt $ht (multi f @tap) lsft $ltk)
  _d       (tap-hold-release-keys $tt $ht (multi d @tap) (layer-while-held U_FF) $ltk)
  ;; QWERTY - RIGHT
  _u       (tap-hold-release-keys $tt $ht (multi u @tap) lalt $rtk)
  _i       (tap-hold-release-keys $tt $ht (multi i @tap) (layer-while-held U_NS) $rtk)
  _o       (tap-hold-release-keys $tt $ht (multi o @tap) lmet $rtk)
  _j       (tap-hold-release-keys $tt $ht (multi j @tap) lsft $rtk)
  _k       (tap-hold-release-keys $tt $ht (multi k @tap) (layer-while-held U_FF) $rtk)
  _l       (tap-hold-release-keys $tt $ht (multi l @tap) lctl $rtk)
  _;       (tap-hold-release-keys $tt $ht (multi ; @tap) (layer-while-held U_NL) $rtk)

  ;; ALPHA                       |-- LEFT --|           |-- RIGHT --|
  ptl   q     rtl @_w     mtl @_e     itl @_r           itr @_u     mtr @_i     rtr @_o     ptr p
  pbl @_a     rbl @_s     mbl @_d     ibl @_f           ibr @_j     mbr @_k     rbr @_l     pbr @_;

  ;; CHORDS ALPHA
  _itl   (chord CH_BASE _itl)
  _mtl   (chord CH_BASE _mtl)
  _rtl   (chord CH_BASE _rtl)
  _ptl   (chord CH_BASE _ptl)
  _ibl   (chord CH_BASE _ibl)
  _mbl   (chord CH_BASE _mbl)
  _rbl   (chord CH_BASE _rbl)
  _pbl   (chord CH_BASE _pbl)
  _itr   (chord CH_BASE _itr)
  _mtr   (chord CH_BASE _mtr)
  _rtr   (chord CH_BASE _rtr)
  _ptr   (chord CH_BASE _ptr)
  _ibr   (chord CH_BASE _ibr)
  _mbr   (chord CH_BASE _mbr)
  _rbr   (chord CH_BASE _rbr)
  _pbr   (chord CH_BASE _pbr)

  ;; CHORDS NS
  _nq   (chord CH_NS _nq)
  _n0   (chord CH_NS _n0)
  _n1   (chord CH_NS _n1)
  _n3   (chord CH_NS _n3)
  _n5   (chord CH_NS _n5)
  _n6   (chord CH_NS _n6)
  _n8   (chord CH_NS _n8)

  ;; CHORDS FF
  _f1   (chord CH_FF _f1)
  _f3   (chord CH_FF _f3)
  _f5   (chord CH_FF _f5)
  _f6   (chord CH_FF _f6)
  _f8   (chord CH_FF _f8)
  _f10  (chord CH_FF _f10)
  _f12  (chord CH_FF _f12)

  ;; ACTIONS
  pgup   (tap-hold $tt $ht pgup lalt)
  pgdn   (tap-hold $tt $ht pgdn lsft)

  _C_z (macro C-z)
  _C_x (macro C-x)
  _C_c (macro C-c)
  _C_v (macro C-v)
  _C_pgup (macro C-pgup)
  _C_pgdn (macro C-pgdn)
  _C_tab (macro C-tab)
  _C_A_q (macro C-A-q)
  _C_w (macro C-w)
  _A_9 (macro A-9)
)

(defchords CH_BASE $ct
  ;; ALPHA                                 |-- LEFT --|      |-- RIGHT --|
  (_ptl) @ptl   (_rtl) @rtl   (_mtl) @mtl   (_itl) @itl      (_itr) @itr   (_mtr) @mtr   (_rtr) @rtr   (_ptr) @ptr
  (_pbl) @pbl   (_rbl) @rbl   (_mbl) @mbl   (_ibl) @ibl      (_ibr) @ibr   (_mbr) @mbr   (_rbr) @rbr   (_pbr) @pbr 

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*|*|     --     |*|*|*| |
  (_rbl _mbl _ibl) spc                     (_ibr _mbr _rbr) spc

  ;;                  | |*|*|*|     --     |*|*|*| |
  ;;                  | | | | |     --     | | | | |
  (_rtl _mtl _itl) esc                     (_itr _mtr _rtr) esc

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | |*|     --     |*| | | |
  (_rtl _mtl _ibl) @os_meh                 (_ibr _mtr _rtr) @os_meh

  ;;                  | | |*| |     --     | |*| | |
  ;;                  | |*| |*|     --     |*| |*| |
  (_rbl _mtl _ibl) @os_ns                  (_ibr _mtr _rbr) @os_ns

  ;;                  | | |*|*|     --     |*|*| | |
  ;;                  | |*| | |     --     | | |*| |
  (_rbl _mtl _itl) enter                   (_itr _mtr _rbr) enter

  ;;                  | |*| | |     --     | | |*| |
  ;;                  | | |*|*|     --     |*|*| | |
  (_rtl _mbl _ibl) bspc                    (_ibr _mbr _rtr) bspc

  ;;                  | | | |*|     --     |*| | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (_rbl _mbl _itl) @os_ff                  (_itr _mbr _rbr) @os_ff
  
  ;;                  | | | | |     --     | | | | |
  ;;                  |*|*|*| |     --     | |*|*|*|
  (_pbl _rbl _mbl) @os_go                  (_mbr _rbr _pbr) @os_go

  ;;                  |*|*|*| |     --     | |*|*|*|
  ;;                  | | | | |     --     | | | | |
  (_ptl _rtl _mtl) @os_me                  (_mtr _rtr _ptr) @os_me
)

(defchords CH_NS $ct
  ;; NUMBER CHORDS
  (_n6) 6   (_n8) 8   (_n0) 0
  (_n1) 1   (_n3) 3   (_n5) 5   (_nq) '

  ;;                  | | | | |     --     | | | | |
  ;;                  | | |*|*|     --     |*|*| | |
  (_n1  _n3) 2

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (_n3  _n5) 4

  ;;                  | | |*|*|     --     |*|*| | |
  ;;                  | | | | |     --     | | | | |
  (_n6  _n8) 7

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | | |     --     | | | | |
  (_n8  _n0) 9
)

(defchords CH_FF $ct
  ;; NUMBER CHORDS
  (_f6) f6   (_f8) f8    (_f10) f10    (_f12) f12
  (_f1) f1   (_f3) f3    ( _f5)  f5

  ;;                  | | | | |     --     | | | | |
  ;;                  | | |*|*|     --     |*|*| | |
  (_f1   _f3)  f2

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (_f3   _f5)  f4

  ;;                  | | |*|*|     --     |*|*| | |
  ;;                  | | | | |     --     | | | | |
  (_f6   _f8)  f7

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | | |     --     | | | | |
  (_f8  _f10)  f9

  ;;                  |*|*| | |     --     | | |*|*|
  ;;                  | | | | |     --     | | | | |
  (_f10 _f12)  f11
)

(deflayer base ;; Alpha keys
  @_ptl  @_rtl  @_mtl  @_itl                @_itr  @_mtr  @_rtr  @_ptr      
  @_pbl  @_rbl  @_mbl  @_ibl                @_ibr  @_mbr  @_rbr  @_pbr      
)

(deflayer U_NS ;; [N]umbers and [S]ymbols
     _  @_n0  @_n8  @_n6                    @_n6  @_n8  @_n0     _
  @_nq  @_n5  @_n3  @_n1                    @_n1  @_n3  @_n5  @_nq
)

(deflayer U_FF ;; [F]unctional keys
  @_f12  @_f10  @_f8  @_f6                  @_f6  @_f8  @_f10  @_f12
      _   @_f5  @_f3  @_f1                  @_f1  @_f3   @_f5  _
)

(deflayer U_NR ;; [N]avigation [R]ight
  @u_nl  lmet  tab  @pgup                   tab   up    bspc  @u_al
  @u_al  lctl  esc  @pgdn                   left  down  rght  enter
)

(deflayer U_NL ;; [N]avigation [L]eft
  @u_al  bspc  up    tab                    @pgup  tab  lmet  @u_nr
  enter  left  down  rght                   @pgdn  esc  lctl  @u_al
)

(deflayer U_ME ;; [ME]dia
  _  prev  volu    mute                     mute  volu    prev  _
  _  next  voldwn  pp                       pp    voldwn  next  _
)

(deflayer U_GO ;; "[GO] to" shortcuts
  @_C_A_q  @_A_9    @_C_pgup  _                 _  @_C_pgup    @_A_9  @_C_A_q
        _  @_C_tab  @_C_pgdn  @_C_w         @_C_w  @_C_pgdn  @_C_tab        _
)

(deffakekeys
  to-base (layer-switch base)
)

(deflayer nomods
  q  w  e  r      u  i  o  p 
   a  s  d  f      j  k  l  ;
)
