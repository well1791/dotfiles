(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes
  ;; sequence-input-mode visible-backspaced

  ;; linux-dev /dev/input/by-id/usb-Kinesis_Kinesis_Adv360_360555127546-if01-event-kbd
  ;; linux-dev /dev/input/event4

  rapid-event-delay 0
  chords-v2-min-idle-experimental 5
)

(defsrc
  q  w  e  r  t       y  u  i  o  p
   a  s  d  f  g       h  j  k  l  ;
    z  x  c  v  b       n  m  ,  .  /  
)

(defalias
  ;; colemak-dh
  ;; q w f p b     j l u y ;
  ;; a r s t g     m n e i o
  ;; z x c d v     k h , . /

  ;; KEYBOARD LAYOUT
  _tlp q    _tlr w    _tlm e    _tli r
  _blp a    _blr s    _blm d    _bli f    _blii g

             _tri u    _trm i    _trr o    _trp p
  _brii h    _bri j    _brm k    _brr l    _brp ;
)

(defvar
  chord_timeout      25 ;; ( 50-100)
  tap_timeout       200 ;; (150-250)
  hold_timeout      200 ;; (150-250)
  one_shot_timeout  500 ;; dismiss after that time

  lt_kbd ( ;; [l]ef[t]-hand keyboard
    q  w  e  r
    a  s  d  f
  )
  rt_kbd ( ;; [r]igh[t]-hand keyboard
    y  u  i  o
    h  j  k  l
  )
)

(defalias
  ;; GO TO
  to_no_mods    (layer-switch L_NO_MODS)
  to_nor_r      (layer-switch L_NOR_R)
  to_ins        (layer-switch L_INS)
  to_edit_nor   (layer-switch L_EDIT_NOR)

  ;; ONE SHOT
  ;;os_meh      (one-shot-press $one_shot_timeout C-A-S)
  os_edit_ins   (one-shot-press $one_shot_timeout (layer-while-held L_EDIT_INS))
  os_shortcuts  (one-shot-press $one_shot_timeout (layer-while-held L_SHORTCUTS))
  os_media      (one-shot-press $one_shot_timeout (layer-while-held L_MEDIA))
  os_nor_r      (one-shot-press $one_shot_timeout (layer-while-held L_NOR_R))
  os_nor_l      (one-shot-press $one_shot_timeout (layer-while-held L_NOR_L))

  ;; WHILE HELD
  wh_numbers    (layer-while-held L_NUMBERS)
  wh_functions  (layer-while-held L_F_1_12)
  wh_nor_r      (layer-while-held L_NOR_R)
  wh_nor_l      (layer-while-held L_NOR_L)

  caps_word (caps-word 2000)
  ;; fake keys for key repeating
  tap (multi @to_no_mods (on-idle-fakekey fk_nomods tap 20))

  mod_tlr      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_tlr @tap) lalt $lt_kbd)
  mod_tlm      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_tlm @tap) @wh_numbers $lt_kbd)
  mod_tli      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_tli @tap) lmet $lt_kbd)
  mod_tri      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_tri @tap) lmet $rt_kbd)
  mod_trm      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_trm @tap) @wh_numbers $rt_kbd)
  mod_trr      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_trr @tap) lalt $rt_kbd)
  mod_blp      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_blp @tap) @wh_nor_r $lt_kbd)
  mod_blr      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_blr @tap) lctl $lt_kbd)
  mod_blm      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_blm @tap) @wh_functions $lt_kbd)
  mod_bli      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_bli @tap) lsft $lt_kbd)
  mod_bri      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_bri @tap) lsft $rt_kbd)
  mod_brm      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_brm @tap) @wh_functions $rt_kbd)
  mod_brr      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_brr @tap) lctl $rt_kbd)
  mod_brp      (tap-hold-release-keys $tap_timeout $hold_timeout (multi @_brp @tap) @wh_nor_l $rt_kbd)

  ;; ALPHA
  ch_al_tli   (chord CH_ALPHA ch_tli)
  ch_al_tlm   (chord CH_ALPHA ch_tlm)
  ch_al_tlr   (chord CH_ALPHA ch_tlr)
  ch_al_bli   (chord CH_ALPHA ch_bli)
  ch_al_blm   (chord CH_ALPHA ch_blm)
  ch_al_blr   (chord CH_ALPHA ch_blr)
  ch_al_tri   (chord CH_ALPHA ch_tri)
  ch_al_trm   (chord CH_ALPHA ch_trm)
  ch_al_trr   (chord CH_ALPHA ch_trr)
  ch_al_bri   (chord CH_ALPHA ch_bri)
  ch_al_brm   (chord CH_ALPHA ch_brm)
  ch_al_brr   (chord CH_ALPHA ch_brr)
  ch_al_blii  (chord CH_ALPHA ch_blii)
  ch_al_brii  (chord CH_ALPHA ch_brii)

  ;; NUMBERS
  nu_n0   (chord CH_NS ch_n0)
  nu_n1   (chord CH_NS ch_n1)
  nu_n3   (chord CH_NS ch_n3)
  nu_n5   (chord CH_NS ch_n5)
  nu_n6   (chord CH_NS ch_n6)
  nu_n8   (chord CH_NS ch_n8)

  ;; FUNCTIONAL KEYS
  ff_f1   (chord CH_FF ch_f1)
  ff_f3   (chord CH_FF ch_f3)
  ff_f5   (chord CH_FF ch_f5)
  ff_f6   (chord CH_FF ch_f6)
  ff_f8   (chord CH_FF ch_f8)
  ff_f10  (chord CH_FF ch_f10)
  ff_f12  (chord CH_FF ch_f12)

  ;; NAVIGATION
  ch_na_up     (chord CH_NA ch_up)
  ch_na_dn     (chord CH_NA ch_dn)
  ch_na_lt     (chord CH_NA ch_lt)
  ch_na_rt     (chord CH_NA ch_rt)
  ch_na_tab    (chord CH_NA ch_tab)
  ch_na_bspc   (chord CH_NA ch_bspc)
  na_pgup      (tap-hold $tap_timeout $hold_timeout pgup lmet)
  na_pgdn      (tap-hold $tap_timeout $hold_timeout pgdn lsft)
  ;;na_up_10  (macro up up up up up up up up up up)
  ;;na_dn_10  (macro down down down down down down down down down down)

  ;; CHORDS NO MODS
  ch_no_blii      (chord CH_NOMODS ch_blii)
  ch_no_brii      (chord CH_NOMODS ch_brii)

  ;; SHORTCUTS
  ctl_pgup   (macro C-pgup)
  ctl_pgdn   (macro C-pgdn)
  ctl_tab    (macro C-tab)
  ctl_w      (macro C-w)
  ctl_sft_t  (macro C-S-t)
  alt_9      (macro A-9)

  ;; Insert-Nav layer
  in_home   (multi home @to_ins)
  in_end    (multi end @to_ins)
  in_up     (multi up end enter @to_ins)
  in_dn     (multi end enter @to_ins)
  in_left   (multi left @to_ins)
  in_right  (multi right @to_ins)
  in_del    (multi del @to_ins)

  ;; Edit Layer
  ed_up (macro S-up)
  ed_dn (macro S-down)
  ed_lt (macro left S-left)
  ed_rt (macro right S-right)
  ed_wl (macro left C-left C-S-right) ;; word left
  ed_wr (macro right C-right C-S-left) ;; word right
)

(defchords CH_ALPHA $chord_timeout
  ;; LEFT
  (ch_tlr) @mod_tlr    (ch_tlm) @mod_tlm    (ch_tli) @mod_tli
  (ch_blr) @mod_blr    (ch_blm) @mod_blm    (ch_bli) @mod_bli    (ch_blii) @_blii

  ;; RIGHT
                       (ch_tri) @mod_tri    (ch_trm) @mod_trm    (ch_trr) @mod_trr
  (ch_brii) @_brii     (ch_bri) @mod_bri    (ch_brm) @mod_brm    (ch_brr) @mod_brr

  ;; go to no mods
  (ch_blii ch_brii) @to_no_mods

  ;;                  | | | | |     --     | | | | |  
  ;;                  | |*|*|*|     --     |*|*|*| |  
  ;;(ch_blr ch_blm ch_bli) spc             (ch_bri ch_brm ch_brr) spc

  ;;                  | |*|*|*|     --     |*|*|*| |
  ;;                  | | | | |     --     | | | | |
  ;;(ch_tlr ch_tlm ch_tli) esc             (ch_tri ch_trm ch_trr) esc

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (ch_blr ch_blm) @os_nor_r                (ch_brm ch_brr) @os_nor_l

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | | |     --     | | | | |
  ;;(ch_tlr ch_tlm) @caps_word             (ch_trm ch_trr) @caps_word

)


(defchords CH_NS $chord_timeout
  ;; RIGHT
  (ch_n6) 6   (ch_n8) 8   (ch_n0) 0
  (ch_n1) 1   (ch_n3) 3   (ch_n5) 5

  ;;                  | | | | |     --     | | | | |
  ;;                  | | |*|*|     --     |*|*| | |
  (ch_n1  ch_n3) 2

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (ch_n3  ch_n5) 4

  ;;                  | | |*|*|     --     |*|*| | |
  ;;                  | | | | |     --     | | | | |
  (ch_n6  ch_n8) 7

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | | |     --     | | | | |
  (ch_n8  ch_n0) 9
)


(defchords CH_FF $chord_timeout
  ;; RIGHT
  (ch_f6) f6   (ch_f8) f8    (ch_f10) f10    (ch_f12) f12
  (ch_f1) f1   (ch_f3) f3    ( ch_f5)  f5

  ;;                  | | | | |     --     | | | | |
  ;;                  | | |*|*|     --     |*|*| | |
  (ch_f1   ch_f3)  f2

  ;;                  | | | | |     --     | | | | |
  ;;                  | |*|*| |     --     | |*|*| |
  (ch_f3   ch_f5)  f4

  ;;                  | | |*|*|     --     |*|*| | |
  ;;                  | | | | |     --     | | | | |
  (ch_f6   ch_f8)  f7

  ;;                  | |*|*| |     --     | |*|*| |
  ;;                  | | | | |     --     | | | | |
  (ch_f8  ch_f10)  f9

  ;;                  |*|*| | |     --     | | |*|*|
  ;;                  | | | | |     --     | | | | |
  (ch_f10 ch_f12)  f11
)

(defchords CH_NA $chord_timeout
  ;; RIGHT
  (ch_tab) tab   (ch_up) up     (ch_bspc) bspc
  (ch_lt) left   (ch_dn) down   (ch_rt) rght

  (ch_lt   ch_dn  ch_rt)        spc
  (ch_tab  ch_up  ch_bspc)      esc
  (ch_tab         ch_bspc)      home
  (ch_lt          ch_rt)        end
  (        ch_up  ch_bspc)      del
  (ch_tab  ch_up         )      pgup
  (        ch_dn  ch_bspc)      pgdn
)

(defchords CH_NOMODS $chord_timeout
  (ch_blii) g
  (ch_brii) h
  (ch_blii ch_brii) @to_ins
)

(deffakekeys
  fk_nomods (layer-switch L_INS)
)


(deflayermap (L_INS)
  ;; LEFT
  q @_tlp    w @ch_al_tlr     e @ch_al_tlm     r @ch_al_tli
  a @mod_blp     s @ch_al_blr     d @ch_al_blm     f @ch_al_bli    g @ch_al_blii

  ;;---------RIGHT
                              u @ch_al_tri    i @ch_al_trm     o @ch_al_trr     p @_trp
             h @ch_al_brii    j @ch_al_bri    k @ch_al_brm     l @ch_al_brr     ; @mod_brp
)

(deflayermap (L_NO_MODS)
  ;; LEFT
  q @_tlp    w @_tlr    e @_tlm    r @_tli
  a @_blp    s @_blr    d @_blm    f @_bli    g @ch_no_blii

  ;;---------RIGHT
                              u @_tri    i @_trm    o @_trr    p @_trp
             h @ch_no_brii    j @_bri    k @_brm    l @_brr    ; @_brp
)

(deflayermap (L_NOR_R)
  ;; LEFT
  q @os_media        w lalt    e del        r @na_pgup
  a @os_shortcuts    s lctl    d @to_ins    f @na_pgdn

  ;;---------------------------RIGHT
                               u @ch_na_tab    i @ch_na_up    o @ch_na_bspc    p XX
                               j @ch_na_lt     k @ch_na_dn    l @ch_na_rt      ; enter
)

(deflayermap (L_NOR_L)
  ;; LEFT
  q XX       w @ch_na_bspc    e @ch_na_up    r @ch_na_tab
  a enter    s @ch_na_rt      d @ch_na_dn    f @ch_na_lt

  ;;--------------------------RIGHT
                              u @na_pgup     i del        o lalt    p @os_media
                              j @na_pgdn     k @to_ins    l lctl    ; @os_shortcuts
)

(deflayermap (L_EDIT_NOR)
  ;; LEFT
  q esc             w XX    e tab    r XX
  a @os_edit_ins    s XX    d del    f XX

  ;;------------------------RIGHT
                            u @ed_wl    i @ed_up    o @ed_wr    p XX
                            j @ed_lt    k @ed_dn    l @ed_rt    ; XX
)

(deflayermap (L_EDIT_INS)
  ;; LEFT
  q @to_nor_r    w XX    e XX    r XX
  a @to_ins      s XX    d XX    f XX

  ;;---------------------RIGHT
                         u @in_home    i @in_up     o @in_end      p @in_del
                         j @in_left    k @in_dn     l @in_right    ; XX
)

(deflayermap (L_NUMBERS)
  ;; Left
  q XX    w @nu_n0    e @nu_n8    r @nu_n6
  a XX    s @nu_n5    d @nu_n3    f @nu_n1

  ;;------------------Right
                      u @nu_n6    i @nu_n8    o @nu_n0    p XX
                      j @nu_n1    k @nu_n3    l @nu_n5    ; XX
)

(deflayermap (L_F_1_12)
  ;; Left
  q @ff_f12   w @ff_f10   e @ff_f8     r @ff_f6
  a XX        s @ff_f5    d @ff_f3     f @ff_f1

  ;;----------------------Right
                          u @ff_f6    i @ff_f8    o @ff_f10    p @ff_f12
                          j @ff_f1    k @ff_f3    l @ff_f5     ; XX
)

(deflayermap (L_MEDIA) ;; one-shot (hold) layer
  ;; Left
  q XX    w prev   e volu      r mute
  a XX    s next   d voldwn    f pp

  ;;---------------Right
                   u mute    i volu     o prev    p XX
                   j pp      k voldwn   l next    ; XX
)

(deflayermap (L_SHORTCUTS) ;; one-shot (hold) layer
  ;; Left
  q XX    w @alt_9      e @ctl_pgup    r @ctl_sft_t
  a XX    s @ctl_tab    d @ctl_pgdn    f @ctl_w

  ;;--------------------Right
                        u @ctl_sft_t    i @ctl_pgup    o @alt_9      p XX
                        j @ctl_w        k @ctl_pgdn    l @ctl_tab    ; XX
)

